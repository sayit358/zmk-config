/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <280>;
            #binding-cells = <2>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;             // delay positional check until key-release
            hold-trigger-key-positions = <13 14 15 16 19 20 21 22>;
        };

        cw: cw {
            compatible = "zmk,behavior-caps-word";
            label = "CW";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_lock {
            bindings = <&kp CAPS>;
            key-positions = <24 35>;
        };

        delete_left {
            bindings = <&kp DELETE>;
            key-positions = <14 16>;
        };

        delete_right {
            bindings = <&kp DELETE>;
            key-positions = <19 21>;
        };

        cw {
            bindings = <&cw>;
            key-positions = <17 18>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <13 14>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <21 20>;
        };

        left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <14 15>;
        };

        right_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <21 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB        &kp Q         &kp W              &kp F            &kp P             &kp B        &kp J      &kp L     &kp U      &kp Y    &kp SEMI  &kp MINUS
&mt LCTRL ESC  &bhm LCTRL A  &bhm LEFT_SHIFT R  &bhm LEFT_ALT S  &bhm LEFT_META T  &kp G        &kp M      &kp N     &kp E      &kp I    &kp O     &kp APOS
&kp LSHFT      &kp Z         &kp X              &kp C            &kp D             &kp V        &kp K      &kp H     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                                &mo 1            &kp LALT          &kp SPACE    &kp ENTER  &kp BSPC  &mo 1
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp N1            &kp N2           &kp N3          &kp N4      &kp N5              &kp N6             &kp N7     &kp N8         &kp N9     &kp N0  &none
&trans  &kp C_VOL_DN      &kp C_VOLUME_UP  &kp C_MUTE      &kp DELETE  &kp PRINTSCREEN     &kp LEFT           &kp DOWN   &kp UP         &kp RIGHT  &none   &none
&trans  &kp C_PLAY_PAUSE  &kp C_NEXT       &kp C_PREVIOUS  &kp C_STOP  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp EQUAL  &kp BACKSLASH  &kp GRAVE  &trans  &none
                                           &mo 2           &trans      &kp SPACE           &kp RET            &trans     &mo 2
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp F1      &kp F2      &kp F3      &kp F4        &kp F5       &kp F6   &kp F7  &kp F8  &kp F9  &kp F10  &none
&trans  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR  &out OUT_TOG  &kp F11      &kp F12  &none   &none   &none   &none    &none
&none   &none       &none       &none       &none         &none        &none    &none   &none   &none   &none    &tog 3
                                &none       &none         &kp SPACE    &kp RET  &none   &none
            >;
        };

        qwerty_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R   &kp T        &kp Y    &kp U          &kp I      &kp O     &kp P         &kp MINUS
&trans     &kp A  &kp S  &kp D  &kp F   &kp G        &kp H    &kp J          &kp K      &kp L     &kp UP_ARROW  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V   &kp B        &kp N    &kp M          &kp COMMA  &kp LEFT  &kp DOWN      &kp RIGHT
                         &mo 1  &trans  &kp SPACE    &kp RET  &kp BACKSPACE  &mo 1
            >;
        };

        layer_4 {
            bindings = <
&none  &kp N4  &kp N5  &kp N6  &kp BACKSLASH  &kp C_VOLUME_UP      &kp C_NEXT  &none             &none   &none      &none  &none
&none  &kp N1  &kp N2  &kp N3  &kp EQUAL      &kp K_MUTE           &kp LEFT    &kp DOWN          &kp UP  &kp RIGHT  &none  &none
&none  &kp N7  &kp N8  &kp N9  &kp GRAVE      &kp C_VOLUME_DOWN    &kp C_PREV  &none             &none   &none      &none  &none
                       &none   &kp N0         &none                &none       &kp C_PLAY_PAUSE  &none
            >;
        };
    };
};
